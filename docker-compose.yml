version: "3.7"

volumes:
  data:
  datalog:

services:
  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
    - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888

  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
    - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888

  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
    - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888

  kafka1:
    build: "./kafka"
    restart: always
    hostname: kafka1
    volumes:
      - "./kafka/server-1.properties:/usr/local/kafka/config/server.properties"
    ports:
      - 9092:9092

  kafka2:
    build: "./kafka"
    restart: always
    hostname: kafka2
    volumes:
      - "./kafka/server-2.properties:/usr/local/kafka/config/server.properties"
    ports:
      - 9093:9093

  kafka3:
    build: "./kafka"
    restart: always
    hostname: kafka3
    volumes:
      - "./kafka/server-3.properties:/usr/local/kafka/config/server.properties"
    ports:
      - 9094:9094

#  producer:
#    build: "./node"
#    depends_on:
#      - kafka1
#      - kafka2
#      - kafka3
#    environment:
#      - NODE_ENV=production
#    volumes:
#      - "./src/:/home/node/app/src/"
#      - "./tsconfig.json:/home/node/app/tsconfig.json"
#    command: "npx ts-node src/producer.ts"
#
#  consumer:
#    build: "./node"
#    depends_on:
#      - producer
#    environment:
#      - NODE_ENV=production
#    volumes:
#      - "./src/:/home/node/app/src/"
#      - "./tsconfig.json:/home/node/app/tsconfig.json"
#    command: "npx ts-node src/consumer.ts"
